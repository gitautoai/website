generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextIndex", "fullTextSearch"]
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Installation {
  created_at      DateTime  @default(now()) @db.Timestamptz(6)
  installation_id BigInt    @id @unique(map: "owners_installation_id_key")
  owner_name      String
  uninstalled_at  DateTime? @db.Timestamptz(6)
  owner_type      String    @default("")
  owner_id        BigInt    @default(1)
  created_by      String?
  uninstalled_by  String?
  owners          Owner     @relation(fields: [owner_id], references: [owner_id], onDelete: NoAction, onUpdate: NoAction, map: "public_owners_owner_id_fkey")
  issues          Issue[]
  users           User[]

  @@map("installations")
}

model Issue {
  id              BigInt       @id @default(autoincrement())
  created_at      DateTime     @default(now()) @db.Timestamptz(6)
  run_id          BigInt?
  installation_id BigInt
  progress        Int          @default(0) @db.SmallInt
  unique_id       String       @unique(map: "issues_issue_key")
  merged          Boolean      @default(false)
  created_by      String?
  installations   Installation @relation(fields: [installation_id], references: [installation_id], onDelete: NoAction, onUpdate: NoAction, map: "public_issues_installation_id_fkey")
  usage           Usage[]

  @@map("issues")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Usage {
  id              BigInt   @id @default(autoincrement())
  created_at      DateTime @default(now()) @db.Timestamptz(6)
  is_completed    Boolean  @default(false)
  token_input     BigInt?
  token_output    BigInt?
  unique_issue_id String
  user_id         BigInt
  installation_id BigInt
  created_by      String?
  total_seconds   BigInt?
  issues          Issue    @relation(fields: [unique_issue_id], references: [unique_id], onDelete: NoAction, onUpdate: NoAction, map: "public_usage_unique_issue_id_fkey")

  @@map("usage")
}

model User {
  id               BigInt        @id @default(autoincrement())
  created_at       DateTime      @default(now()) @db.Timestamptz(6)
  deleted_at       DateTime?     @db.Timestamptz(6)
  user_name        String?
  user_id          BigInt
  installation_id  BigInt?
  is_user_assigned Boolean       @default(false)
  first_issue      Boolean       @default(true)
  is_selected      Boolean       @default(false)
  created_by       String?
  deleted_by       String?
  installations    Installation? @relation(fields: [installation_id], references: [installation_id], onDelete: Cascade, map: "public_users_installation_id_fkey")

  @@unique([user_id, installation_id])
  @@map("users")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Owner {
  created_at         DateTime       @default(now()) @db.Timestamptz(6)
  owner_id           BigInt         @id(map: "owners_table_pkey") @unique(map: "owners_table_owner_id_key")
  stripe_customer_id String         @unique
  created_by         String?
  installations      Installation[]

  @@map("owners")
}