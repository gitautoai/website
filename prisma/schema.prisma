generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextIndex", "fullTextSearch"]
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model installation_history {
  id                       Int      @id @default(autoincrement())
  installation_target_type String
  installation_target_id   BigInt
  installation_target_name String
  installation_id          BigInt
  installation_status      String
  created_at               DateTime @default(now()) @db.Timestamptz(6)
  created_by_id            BigInt
  created_by_name          String

  @@unique([installation_target_id, installation_target_type, created_at])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model issues {
  id                      BigInt     @id @default(autoincrement())
  created_at              DateTime   @default(now()) @db.Timestamptz(6)
  run_id                  BigInt?
  used_within_time_period BigInt?
  installation_id         BigInt
  progress                Int        @default(0) @db.SmallInt
  unique_id               String     @unique(map: "issues_issue_key")
  owner_info              owner_info @relation(fields: [installation_id], references: [installation_id], onDelete: NoAction, onUpdate: NoAction, map: "public_issues_installation_id_fkey")
}

model owner_info {
  id                      BigInt    @id @default(autoincrement())
  created_at              DateTime  @default(now()) @db.Timestamptz(6)
  installation_id         BigInt    @unique
  owner_name              String    
  deleted_at              DateTime? @db.Timestamptz(6)
  request_count           BigInt    @default(0)
  invoice_id              String?
  completed_request_count BigInt?   @default(0)
  issues                  issues[]
}
